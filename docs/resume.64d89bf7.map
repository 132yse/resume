{"version":3,"sources":["node_modules/fre/dist/fre.js","index.js"],"names":["App","Left","Right","document","getElementById"],"mappings":";;;;;AAkZA,IAAA,EAAA,EAAA,UAAA,IAlZA,SAAA,EAAA,GACA,iBAAA,SAAA,oBAAA,OAAA,EAAA,SACA,mBAAA,GAAA,EAAA,IAAA,EAAA,CAAA,WAAA,GACA,GAAA,EAAA,GAAA,MAAA,IAAA,IAHA,CAIA,KAAA,SAAA,GAAA,aAEA,MAAA,EAAA,OAYA,MAAA,EAAA,GAAA,EAAA,WAAA,MACA,EAAA,GAAA,cAAA,EACA,EAAA,GAAA,UAAA,GAAA,OAAA,GAAA,SAAA,GAAA,WAAA,GAAA,QAAA,EACA,EAAA,CAAA,EAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAEA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,KAAA,GACA,OAAA,GACA,OAAA,EAAA,EAAA,IACA,QAAA,IACA,EAAA,GAAA,EAAA,KAGA,OAAA,KAAA,GACA,OAAA,GACA,OAAA,EAAA,EAAA,IACA,QAAA,IACA,EAAA,aAAA,EAAA,EAAA,MAGA,EAAA,MAAA,EAAA,OAAA,GACA,OAAA,KAAA,EAAA,OACA,OAAA,EAAA,EAAA,MAAA,EAAA,QACA,QAAA,IACA,EAAA,MAAA,GAAA,EAAA,MAAA,KAGA,OAAA,KAAA,GACA,OAAA,GACA,OAAA,EAAA,EAAA,IACA,QAAA,IACA,MAAA,EAAA,EAAA,cAAA,UAAA,GACA,EAAA,iBAAA,EAAA,EAAA,MAaA,IAAA,EAAA,EAEA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,KAAA,MAAA,GAAA,IAEA,WAAA,KAwDA,SAAA,EAAA,EAAA,GACA,EAAA,MAAA,GAAA,EACA,EAAA,KAAA,CACA,KAAA,EACA,SAAA,EACA,MAAA,EAAA,QAEA,oBAAA,IA/DA,CAAA,KAAA,EAAA,IAQA,SAAA,EAAA,EAAA,GACA,IAGA,EAHA,EAAA,IAAA,EACA,EAAA,EAAA,KAAA,EAAA,EAAA,GAIA,OAHA,GAAA,IAEA,IAAA,EAAA,EAAA,OACA,iBAAA,GAAA,KAAA,EACA,CAAA,EAAA,GAAA,IAEA,IAAA,EAAA,MAAA,GAAA,GAGA,CADA,EACA,IAYA,MAAA,EAAA,OACA,EAAA,OACA,EAAA,OAEA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,EAAA,EAEA,EAAA,GACA,IAAA,EAAA,KACA,EAAA,KACA,EAAA,KAqBA,SAAA,EAAA,IAOA,SAAA,GACA,GAmBA,WACA,MAAA,EAAA,EAAA,QACA,IAAA,EACA,OAGA,EAAA,QACA,EAAA,SAAA,QAAA,MAAA,EAAA,OAEA,MAAA,EACA,EAAA,MAAA,EACA,EAAA,IAAA,oBAWA,SAAA,GACA,IAAA,EAAA,EACA,KAAA,EAAA,QACA,EAAA,EAAA,OAEA,OAAA,EAfA,CAAA,EAAA,SAAA,SAEA,EAAA,CACA,KAAA,EACA,KAAA,EAAA,KAAA,EAAA,KACA,MAAA,EAAA,UAAA,EAAA,MACA,UAAA,GApCA,GAEA,KAAA,GAAA,EAAA,gBAAA,GACA,EAAA,EAAA,GAEA,KAsMA,EArMA,GAsMA,QAAA,QAAA,KAQA,SAAA,GACA,GAAA,EAAA,MAAA,EACA,OAGA,IAAA,EAAA,EAAA,OACA,KAAA,EAAA,MAAA,GACA,EAAA,EAAA,OAEA,MAAA,EAAA,EAAA,KAEA,EAAA,WAAA,GAAA,EAAA,MAAA,EACA,EAAA,YAAA,EAAA,MACA,EAAA,WAAA,EACA,EAAA,EAAA,KAAA,EAAA,UAAA,MAAA,EAAA,OACA,EAAA,WAAA,GAKA,SAAA,EAAA,GACA,IAAA,EAAA,EACA,OACA,GAAA,EAAA,MAAA,EAAA,CAKA,IADA,EAAA,YAAA,EAAA,MACA,GAAA,IAAA,EAAA,SACA,EAAA,EAAA,OAEA,GAAA,GAAA,EACA,OAEA,EAAA,EAAA,aAVA,EAAA,EAAA,MARA,CAAA,EAAA,GAvBA,CAAA,KAEA,EAAA,KAAA,oBAAA,EACA,EAAA,KACA,EAAA,MANA,IAAA,EAhMA,EAHA,EAAA,QAIA,OAAA,KAAA,GAAA,QAAA,IACA,IAAA,EAAA,EAAA,GACA,MAHA,IAAA,EAnBA,CAAA,IACA,GAAA,EAAA,OAAA,IACA,oBAAA,GAsDA,SAAA,EAAA,GAEA,GAaA,SAAA,GACA,EAAA,MAAA,EAgBA,SAAA,GACA,IAAA,EAAA,EAAA,KACA,MAAA,EACA,EAAA,EAAA,KAuEA,SAAA,GACA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAEA,OADA,EAAA,QAAA,EACA,EA1EA,CAAA,GACA,EAAA,OAAA,EAAA,OAAA,EAAA,OA4EA,SAAA,GACA,MAAA,EAAA,EAAA,UACA,IAAA,EAAA,MACA,OAGA,IAAA,EAAA,EAAA,MACA,EAAA,KACA,KAAA,GAAA,CACA,MAAA,EAAA,CACA,IAAA,EAAA,IACA,KAAA,EAAA,KACA,KAAA,EAAA,KACA,MAAA,EAAA,MACA,MAAA,EAAA,MACA,UAAA,EACA,OAAA,GAEA,EACA,EAAA,QAAA,EAEA,EAAA,MAAA,EAEA,EAAA,EACA,EAAA,EAAA,SAnGA,CAAA,GAEA,EAAA,MAAA,EAAA,OAAA,GACA,EAAA,MAAA,EAAA,OAAA,GACA,EAAA,QAAA,EAAA,SAAA,GACA,EAAA,EAlKA,EAAA,EAoKA,MAAA,EAAA,EAAA,IAAA,EAAA,OACA,EAAA,EAAA,GA5BA,CAAA,GAMA,SAAA,GACA,EAAA,OACA,EAAA,KAlKA,SAAA,GACA,MACA,EADA,EAAA,MAAA,EAEA,SAAA,eAAA,IACA,SAAA,cAAA,EAAA,KAEA,OADA,EAAA,EAAA,GAAA,EAAA,OACA,EA4JA,CAAA,IAGA,MAAA,EAAA,EAAA,MAAA,SACA,EAAA,EAAA,GAVA,CAAA,GAlBA,CAAA,GACA,EAAA,MACA,OAAA,EAAA,MAEA,IAAA,EAAA,EACA,KAAA,GAAA,CAEA,GADA,EAAA,GACA,EAAA,QACA,OAAA,EAAA,QAEA,EAAA,EAAA,QAyCA,SAAA,EAAA,EAAA,GACA,MAAA,EAJA,OADA,EAKA,GAJA,GAAA,MAAA,QAAA,GAAA,EAAA,CAAA,GADA,IAAA,EAOA,IAAA,EAAA,EACA,EAAA,EAAA,UAAA,EAAA,UAAA,MAAA,KACA,EAAA,KACA,KAAA,EAAA,EAAA,QAAA,MAAA,GAAA,CACA,MAAA,EAAA,EACA,EAAA,EAAA,EAAA,QAAA,EAAA,GACA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAEA,IACA,EAAA,CACA,IAAA,EAAA,IACA,KAAA,EAAA,KACA,KAAA,EAAA,KACA,MAAA,EAAA,MACA,OAAA,EACA,UAAA,EACA,MAAA,EAAA,MACA,UAAA,IAIA,IAAA,IACA,EAAA,CACA,IAAA,EAAA,IACA,KAAA,iBAAA,EAAA,IAAA,EAAA,EACA,MAAA,EAAA,MACA,OAAA,EACA,UAAA,IAIA,IAAA,IACA,EAAA,UAAA,EACA,EAAA,QAAA,EAAA,SAAA,GACA,EAAA,QAAA,KAAA,IAGA,IACA,EAAA,EAAA,SAGA,GAAA,EACA,EAAA,MAAA,EACA,GAAA,IACA,EAAA,QAAA,GAGA,KAsCA,SAAA,EAAA,GAKA,GAJA,EAAA,MAAA,IACA,EAAA,KAAA,QAAA,GAGA,EAAA,OAAA,CACA,MAAA,EAAA,EAAA,SAAA,GACA,EAAA,MAAA,EAAA,UAAA,CAAA,GAAA,GACA,EAAA,EAAA,OAAA,SAAA,GACA,EAAA,OAAA,QAAA,EAAA,OAAA,EAAA,QAEA,EAAA,EAmDA,EAAA,EAjYA,SAAA,EAAA,EAAA,KAAA,GACA,MAAA,EAAA,OAAA,OAAA,GAAA,GAEA,EADA,EAAA,OAAA,EACA,GAAA,UAAA,GAAA,GAIA,OAHA,EAAA,SAAA,EACA,OAAA,GAAA,MAAA,IAAA,IAAA,GACA,IAAA,GAAA,aAAA,OAAA,EAAA,EAAA,EAAA,CAAA,UAAA,KACA,CAAA,IAAA,EAAA,MAAA,IA2XA,EAAA,OAvRA,SAAA,EAAA,GACA,EAAA,KAAA,CACA,KAAA,EACA,IAAA,EACA,SAAA,CAAA,SAAA,KAEA,oBAAA,IAkRA,EAAA,SAlUA,SAAA,GACA,OAAA,EAAA,KAAA,IAkUA,EAAA,WAAA,EACA,EAAA,UAjTA,SAAA,EAAA,GACA,GAAA,EAAA,CACA,IAAA,EAAA,IAAA,EACA,EAAA,QAAA,GAAA,EACA,MA+SA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA;;AC9MA,aAjMA,QAAA,eACA,IAAA,EAAA,QAAA,OACA,SAASA,IAEL,OAAA,EAAA,EAAA,GAAA,MAAA,CAAK,MAAM,cACT,EAAC,EAAA,GAAA,EADH,OAEE,EAAC,EAAA,GAAA,EAFH,OAOJ,SAASC,IAEL,OAAA,EAAA,EAAA,GAAA,MAAA,CAAK,MAAM,SACT,EAAA,EAAA,GAAA,MAAA,CAAK,MAAM,SACT,EAAA,EAAA,GAAA,MAAA,CAAK,IAAI,2FACT,EAAA,EAAA,GAAA,MAAA,CAAK,MAAM,SACT,EADF,EAAA,GAAA,KAAA,KAAA,UAEE,EAFF,EAAA,GAAA,KAAA,KAAA,iBAIA,EAAA,EAAA,GAAA,MAAA,CAAK,MAAM,SACT,EACE,EAAA,GAAA,KAAA,MAAA,EACE,EAAA,GAAA,KAAA,MAAA,EAAA,EAAA,GAAA,IAAA,CAAG,MAAM,uBAFb,kBAKE,EACE,EAAA,GAAA,KAAA,MAAA,EAAA,EAAA,GAAA,IAAA,CAAG,MAAM,yBANb,YASE,EACE,EAAA,GAAA,KAAA,MAAA,EAAA,EAAA,GAAA,IAAA,CAAG,MAAM,0BAVb,mBAaE,EACE,EAAA,GAAA,KAAA,MAAA,EAAA,EAAA,GAAA,IAAA,CAAG,MAAM,2BAdb,2BAmBF,EAAA,EAAA,GAAA,MAAA,CAAK,MAAM,SACT,EADF,EAAA,GAAA,KAAA,KAAA,SAEE,EACE,EAAA,GAAA,KAAA,MAAA,EACE,EAAA,GAAA,KAAA,MAAA,EAAA,EAAA,GAAA,IAAA,CAAG,MAAM,0BACT,EAAA,EAAA,GAAA,IAAA,CAAG,KAAK,4BAA4B,OAAO,UAF7C,UAIA,EACE,EAAA,GAAA,KAAA,MAAA,EAAA,EAAA,GAAA,IAAA,CAAG,MAAM,0BACT,EAAA,EAAA,GAAA,IAAA,CAAG,KAAK,2BAA2B,OAAO,UAF5C,aAWZ,SAASC,IAEL,OAAA,EAAA,EAAA,GAAA,MAAA,CAAK,MAAM,UACT,EAAA,EAAA,GAAA,UAAA,CAAS,MAAM,YACb,EACE,EAAA,GAAA,KAAA,MAAA,EAAA,EAAA,GAAA,IAAA,CAAG,MAAM,yBAFb,SAKE,EACE,EAAA,GAAA,IAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,sCAEE,EACE,EAAA,GAAA,KAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,uBAEE,EAFF,EAAA,GAAA,KAAA,KAAA,kDAME,EANF,EAAA,GAAA,KAAA,KAAA,+CAaJ,EAAA,EAAA,GAAA,UAAA,CAAS,MAAM,YACb,EACE,EAAA,GAAA,KAAA,MAAA,EAAA,EAAA,GAAA,IAAA,CAAG,MAAM,6BAFb,SAKE,EACE,EAAA,GAAA,IAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,2BAEE,EACE,EAAA,GAAA,KAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,2CAEE,EAFF,EAAA,GAAA,KAAA,KAAA,mCAGE,EAAI,EAAA,GAAA,KAAA,MAAA,EAAJ,EAAA,GAAA,OAAA,KAAA,qCAGJ,EACE,EAAA,GAAA,IAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,mCAEE,EACE,EAAA,GAAA,KAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,8BAEE,EAAI,EAAA,GAAA,KAAA,MAAA,EAAJ,EAAA,GAAA,OAAA,KAAA,qBAIN,EAAA,EAAA,GAAA,UAAA,CAAS,MAAM,YACb,EACE,EAAA,GAAA,KAAA,MAAA,EAAA,EAAA,GAAA,IAAA,CAAG,MAAM,yBAFb,SAKE,EACE,EAAA,GAAA,IAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,8BAEE,EACE,EAAA,GAAA,KAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,gDAEE,EAFF,EAAA,GAAA,KAAA,KAAA,4CAKE,EALF,EAAA,GAAA,KAAA,KAAA,2BAOE,EAAI,EAAA,GAAA,KAAA,MAAA,EAAJ,EAAA,GAAA,OAAA,KAAA,2CAGJ,EACE,EAAA,GAAA,IAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,0BAEE,EACE,EAAA,GAAA,KAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,sCAEE,EAFF,EAAA,GAAA,KAAA,KAAA,4BAIE,EAAI,EAAA,GAAA,KAAA,MAAA,EAAiC,EAAA,GAAA,OAAA,KAAA,+BAAA,EAAA,EAAA,GAAA,IAAA,CAAG,KAAK,4CAAzC,MAAJ,SAGJ,EACE,EAAA,GAAA,IAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,yBAEE,EACE,EAAA,GAAA,KAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,+CAEE,EAFF,EAAA,GAAA,KAAA,KAAA,sDAOE,EAAI,EAAA,GAAA,KAAA,MAAA,EAAJ,EAAA,GAAA,OAAA,KAAA,sDAGJ,EACE,EAAA,GAAA,IAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,8CAEE,EACE,EAAA,GAAA,KAAA,MAAA,EADF,EAAA,GAAA,KAAA,KAAA,iCAEE,EAFF,EAAA,GAAA,KAAA,KAAA,+CAME,EAAI,EAAA,GAAA,KAAA,MAAA,EAAJ,EAAA,GAAA,OAAA,KAAA,oDAIN,EAAA,EAAA,GAAA,UAAA,CAAS,MAAM,YACb,EACE,EAAA,GAAA,KAAA,MAAA,EAAA,EAAA,GAAA,IAAA,CAAG,MAAM,yBAFb,SAKE,EAAA,EAAA,GAAA,KAAA,CAAI,MAAM,WACR,EACE,EAAA,GAAA,KAAA,MAAA,EADF,EAAA,GAAA,OAAA,KAAA,OADF,kCAIE,EACE,EAAA,GAAA,KAAA,MAAA,EADF,EAAA,GAAA,OAAA,KAAA,OAJF,0BAOE,EACE,EAAA,GAAA,KAAA,MAAA,EADF,EAAA,GAAA,OAAA,KAAA,OAPF,mCAUE,EACE,EAAA,GAAA,KAAA,MAAA,EADF,EAAA,GAAA,OAAA,KAAA,OAVF,2CAgBF,EAAA,EAAA,GAAA,UAAA,CAAS,MAAM,YACb,EACE,EAAA,GAAA,KAAA,MAAA,EAAA,EAAA,GAAA,IAAA,CAAG,MAAM,0BAFb,SAKE,EAAA,EAAA,GAAA,KAAA,CAAI,MAAM,WACR,EACE,EAAA,GAAA,KAAA,MAAA,EADF,EAAA,GAAA,OAAA,KAAA,QADF,kCAKE,EAEE,EAAA,GAAA,KAAA,KAAA,0CAAA,EAFF,EAAA,GAAA,OAAA,KAAA,MALF,eAeR,EAAO,EAAA,SAAA,EAAC,EAAA,GAAA,EAAR,MAAgBC,SAASC,eAAe","file":"resume.64d89bf7.map","sourceRoot":"..","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.fre = {}));\n}(this, function (exports) { 'use strict';\n\n  const TEXT = 'text';\n\n  function h(tag, config, ...args) {\n    const props = Object.assign({}, config);\n    const hasChildren = args.length > 0;\n    const rawChildren = hasChildren ? [].concat(...args) : [];\n    props.children = rawChildren\n      .filter(c => c != null && c !== false)\n      .map(c => (c instanceof Object ? c : h(TEXT, { nodeValue: c })));\n    return { tag, props }\n  }\n\n  const isEvent = name => name.startsWith('on');\n  const isText = name => name === 'nodeValue';\n  const isAttribute = name => name === 'class' || name === 'id' || name === 'href' || name === 'target' || name === 'src';\n  const isNew = (prev, next) => key => prev[key] !== next[key];\n\n  function updateProperties(dom, prevProps, nextProps) {\n    Object.keys(nextProps)\n      .filter(isText)\n      .filter(isNew(prevProps, nextProps))\n      .forEach(name => {\n        dom[name] = nextProps[name];\n      });\n\n      Object.keys(nextProps)\n      .filter(isAttribute)\n      .filter(isNew(prevProps, nextProps))\n      .forEach(name => {\n        dom.setAttribute(name,nextProps[name]);\n      });   \n\n    nextProps.style = nextProps.style || {};\n    Object.keys(nextProps.style)\n      .filter(isNew(prevProps.style, nextProps.style))\n      .forEach(key => {\n        dom.style[key] = nextProps.style[key];\n      });\n\n    Object.keys(nextProps)\n      .filter(isEvent)\n      .filter(isNew(prevProps, nextProps))\n      .forEach(name => {\n        const eventType = name.toLowerCase().substring(2);\n        dom.addEventListener(eventType, nextProps[name]);\n      });\n  }\n\n  function createElement(fiber) {\n    const isTextElement = fiber.tag === TEXT;\n    const dom = isTextElement\n      ? document.createTextNode('')\n      : document.createElement(fiber.tag);\n    updateProperties(dom, [], fiber.props);\n    return dom\n  }\n\n  let cursor = 0;\r\n\r\n  function update(k, r, v) {\r\n    r ? (v = r(this.state[k], v)) : v;\r\n    //这里实现不太理想，之后想办法搞成微任务\r\n    setTimeout(() => scheduleUpdate(this, k, v));\r\n  }\r\n  function resetCursor() {\r\n    cursor = 0;\r\n  }\r\n  function useState(initState) {\r\n    return useReducer(null, initState)\r\n  }\r\n  function useReducer(reducer, initState) {\r\n    let key = '$' + cursor;\r\n    let setter = update.bind(currentInstance, key, reducer);\r\n    if (currentInstance) cursor++;\r\n    let state;\r\n    if (currentInstance) state = currentInstance.state;\r\n    if (typeof state === 'object' && key in state) {\r\n      return [state[key], setter]\r\n    } else {\r\n      if (currentInstance) currentInstance.state[key] = initState;\r\n    }\r\n    let value = initState;\r\n    return [value, setter]\r\n  }\r\n\r\n  // 这个实现并不准确\r\n  function useEffect(effect, inputs) {\r\n    if (currentInstance) {\r\n      let key = '$' + cursor;\r\n      currentInstance.effects[key] = effect;\r\n      cursor++;\r\n    }\r\n  }\n\n  const HOST = 'host';\n  const HOOK = 'hook';\n  const ROOT = 'root';\n\n  const PLACE = 1;\n  const DELETE = 2;\n  const UPDATE = 3;\n\n  const ENOUGH_TIME = 1;\n\n  const updateQueue = [];\n  let nextUnitOfWork = null;\n  let pendingCommit = null;\n  let currentInstance = null;\n\n  function render(vdom, el) {\n    updateQueue.push({\n      from: ROOT,\n      dom: el,\n      newProps: { children: vdom }\n    });\n    requestIdleCallback(performWork);\n  }\n\n  function scheduleUpdate(instance, k, v) {\n    instance.state[k] = v;\n    updateQueue.push({\n      from: HOOK,\n      instance,\n      state: instance.state\n    });\n    requestIdleCallback(performWork);\n  }\n\n  function performWork(deadline) {\n    workLoop(deadline);\n    if (nextUnitOfWork || updateQueue.length > 0) {\n      requestIdleCallback(performWork);\n    }\n  }\n\n  function workLoop(deadline) {\n    if (!nextUnitOfWork) {\n      resetNextUnitOfWork();\n    }\n    while (nextUnitOfWork && deadline.timeRemaining() > ENOUGH_TIME) {\n      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    }\n    if (pendingCommit) {\n      commitAllWork(pendingCommit);\n    }\n    commitEffects(currentInstance.effects);\n  }\n\n  function commitEffects(effects) {\n    Object.keys(effects).forEach(key => {\n      let effect = effects[key];\n      effect();\n    });\n  }\n\n  function resetNextUnitOfWork() {\n    const update = updateQueue.shift();\n    if (!update) {\n      return\n    }\n\n    if (update.state) {\n      update.instance.__fiber.state = update.state;\n    }\n    const root =\n      update.from == ROOT\n        ? update.dom._rootContainerFiber\n        : getRoot(update.instance.__fiber);\n\n    nextUnitOfWork = {\n      type: ROOT,\n      base: update.dom || root.base,\n      props: update.newProps || root.props,\n      alternate: root\n    };\n  }\n\n  function getRoot(fiber) {\n    let node = fiber;\n    while (node.parent) {\n      node = node.parent;\n    }\n    return node\n  }\n\n  function performUnitOfWork(wipFiber) {\n    beginWork(wipFiber);\n    if (wipFiber.child) {\n      return wipFiber.child\n    }\n    let uow = wipFiber;\n    while (uow) {\n      completeWork(uow);\n      if (uow.sibling) {\n        return uow.sibling\n      }\n      uow = uow.parent;\n    }\n  }\n\n  function beginWork(wipFiber) {\n    if (wipFiber.type == HOOK) {\n      updateHOOKComponent(wipFiber);\n    } else {\n      updateHostComponent(wipFiber);\n    }\n  }\n\n  function updateHostComponent(wipFiber) {\n    if (!wipFiber.base) {\n      wipFiber.base = createElement(wipFiber);\n    }\n\n    const newChildren = wipFiber.props.children;\n    reconcileChildren(wipFiber, newChildren);\n  }\n\n  function updateHOOKComponent(wipFiber) {\n    let instance = wipFiber.base;\n    if (instance == null) {\n      instance = wipFiber.base = createInstance(wipFiber);\n    } else if (wipFiber.props == instance.props && !wipFiber.state) {\n      cloneChildFibers(wipFiber);\n    }\n    instance.props = wipFiber.props || {};\n    instance.state = wipFiber.state || {};\n    instance.effects = wipFiber.effects || {};\n    currentInstance = instance;\n    resetCursor();\n    const newChildren = wipFiber.tag(wipFiber.props);\n    reconcileChildren(wipFiber, newChildren);\n  }\n\n  function arrify(val) {\n    return val == null ? [] : Array.isArray(val) ? val : [val]\n  }\n\n  function reconcileChildren(wipFiber, newChildren) {\n    const elements = arrify(newChildren);\n\n    let index = 0;\n    let oldFiber = wipFiber.alternate ? wipFiber.alternate.child : null;\n    let newFiber = null;\n    while (index < elements.length || oldFiber != null) {\n      const prevFiber = newFiber;\n      const element = index < elements.length && elements[index];\n      const sameTag = oldFiber && element && element.tag == oldFiber.tag;\n\n      if (sameTag) {\n        newFiber = {\n          tag: oldFiber.tag,\n          type: oldFiber.type,\n          base: oldFiber.base,\n          props: element.props,\n          parent: wipFiber,\n          alternate: oldFiber,\n          state: oldFiber.state,\n          effectTag: UPDATE\n        };\n      }\n\n      if (element && !sameTag) {\n        newFiber = {\n          tag: element.tag,\n          type: typeof element.tag === 'string' ? HOST : HOOK,\n          props: element.props,\n          parent: wipFiber,\n          effectTag: PLACE\n        };\n      }\n\n      if (oldFiber && !sameTag) {\n        oldFiber.effectTag = DELETE;\n        wipFiber.effects = wipFiber.effects || [];\n        wipFiber.effects.push(oldFiber);\n      }\n\n      if (oldFiber) {\n        oldFiber = oldFiber.sibling;\n      }\n\n      if (index == 0) {\n        wipFiber.child = newFiber;\n      } else if (prevFiber && element) {\n        prevFiber.sibling = newFiber;\n      }\n\n      index++;\n    }\n  }\n\n  function createInstance(fiber) {\n    const instance = new fiber.tag(fiber.props);\n    instance.__fiber = fiber;\n    return instance\n  }\n\n  function cloneChildFibers(parentFiber) {\n    const oldFiber = parentFiber.alternate;\n    if (!oldFiber.child) {\n      return\n    }\n\n    let oldChild = oldFiber.child;\n    let prevChild = null;\n    while (oldChild) {\n      const newChild = {\n        tag: oldChild.tag,\n        type: oldChild.type,\n        base: oldChild.base,\n        props: oldChild.props,\n        state: oldChild.state,\n        alternate: oldChild,\n        parent: parentFiber\n      };\n      if (prevChild) {\n        prevChild.sibling = newChild;\n      } else {\n        parentFiber.child = newChild;\n      }\n      prevChild = newChild;\n      oldChild = oldChild.sibling;\n    }\n  }\n\n  function completeWork(fiber) {\n    if (fiber.type == HOOK) {\n      fiber.base.__fiber = fiber;\n    }\n\n    if (fiber.parent) {\n      const childEffects = fiber.effects || [];\n      const thisEffect = fiber.effectTag != null ? [fiber] : [];\n      const parentEffects = fiber.parent.effects || [];\n      fiber.parent.effects = parentEffects.concat(childEffects, thisEffect);\n    } else {\n      pendingCommit = fiber;\n    }\n  }\n\n  function commitAllWork(fiber) {\n    fiber.effects.forEach(f => {\n      commitWork(f);\n    });\n    fiber.base._rootContainerFiber = fiber;\n    nextUnitOfWork = null;\n    pendingCommit = null;\n  }\n\n  function commitWork(fiber) {\n    if (fiber.type == ROOT) {\n      return\n    }\n\n    let domParentFiber = fiber.parent;\n    while (domParentFiber.type == HOOK) {\n      domParentFiber = domParentFiber.parent;\n    }\n    const domParent = domParentFiber.base;\n\n    if (fiber.effectTag == PLACE && fiber.type == HOST) {\n      domParent.appendChild(fiber.base);\n    } else if (fiber.effectTag == UPDATE) {\n      updateProperties(fiber.base, fiber.alternate.props, fiber.props);\n    } else if (fiber.effectTag == DELETE) {\n      commitDELETE(fiber, domParent);\n    }\n  }\n\n  function commitDELETE(fiber, domParent) {\n    let node = fiber;\n    while (true) {\n      if (node.type == HOOK) {\n        node = node.child;\n        continue\n      }\n      domParent.removeChild(node.base);\n      while (node != fiber && !node.sibling) {\n        node = node.parent;\n      }\n      if (node == fiber) {\n        return\n      }\n      node = node.sibling;\n    }\n  }\n\n  exports.h = h;\n  exports.render = render;\n  exports.useState = useState;\n  exports.useReducer = useReducer;\n  exports.useEffect = useEffect;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","import './style.css'\r\nimport { h, render } from 'fre'\r\nfunction App() {\r\n  return (\r\n    <div class=\"container\">\r\n      <Left />\r\n      <Right />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Left() {\r\n  return (\r\n    <div class=\"left\">\r\n      <div class=\"logo\">\r\n        <img src=\"https://tvax4.sinaimg.cn/crop.0.78.1422.1422.180/0065Zy9ely8fve0dvwdwnj31401z4b29.jpg\" />\r\n        <div class=\"name\">\r\n          <h1> 赵昌浩 </h1>\r\n          <h3>求职意向：web 前端</h3>\r\n        </div>\r\n        <div class=\"info\">\r\n          <ul>\r\n            <li>\r\n              <i class=\"iconfont icon-rili\" />\r\n              生日：1998-11-22\r\n            </li>\r\n            <li>\r\n              <i class=\"iconfont icon-weizhi\" />\r\n              籍贯：山东高密\r\n            </li>\r\n            <li>\r\n              <i class=\"iconfont icon-dianhua\" />\r\n              电话：18593996744\r\n            </li>\r\n            <li>\r\n              <i class=\"iconfont icon-youxiang\" />\r\n              邮箱：1533540012@qq.com\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"link\">\r\n          <h2>作品链接</h2>\r\n          <ul>\r\n            <li>\r\n              <i class=\"iconfont icon-github\" />\r\n              <a href=\"https://github.com/132yse\" target='_blank'>开源作品</a>\r\n            </li>\r\n            <li>\r\n              <i class=\"iconfont icon-lofter\" />\r\n              <a href=\"http://caowoa.lofter.com\" target='_blank'>设计作品</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Right() {\r\n  return (\r\n    <div class=\"right\">\r\n      <section class=\"section\">\r\n        <h1>\r\n          <i class=\"iconfont icon-jiaoyu\" />\r\n          校园实践\r\n        </h1>\r\n        <p>\r\n          <h3>2016.09——2020.06 北海艺术设计学院 动画专业 二本</h3>\r\n          <ul>\r\n            <li>2016 年加入 ·平行世界工作室·</li>\r\n            <li>\r\n              2017\r\n              年，参与制作的《琵琶行》、《离骚》等，多次热搜，荣登环球时报、人民日报等各大报刊\r\n            </li>\r\n            <li>\r\n              2018\r\n              年，《逍遥游》发布，《琵琶行》荣登央视，由方锦龙先生奏乐，任嘉伦翻唱\r\n            </li>\r\n          </ul>\r\n        </p>\r\n      </section>\r\n      <section class=\"section\">\r\n        <h1>\r\n          <i class=\"iconfont icon-gongzuoliu\" />\r\n          项目经验\r\n        </h1>\r\n        <p>\r\n          <h3>2018.06—— 某弹幕网（哗） 个人项目</h3>\r\n          <ul>\r\n            <li>全栈，B 端 vue ，C 端 react，后端 golang + node</li>\r\n            <li>我的开源项目 smox、fre、ep 等，都得到了大规模应用</li>\r\n            <li><span>难点：前端主要是 vue ssr 和 播放器（+弹幕系统）</span></li>\r\n          </ul>\r\n        </p>\r\n        <p>\r\n          <h3>2017.06——2017.08 北京无维科技 web 前端</h3>\r\n          <ul>\r\n            <li>vue 栈，负责开发《微信编辑器》，参考有赞、秀米</li>\r\n            <li><span>难点：类似场景的设计思路</span></li>\r\n          </ul>\r\n        </p>\r\n      </section>\r\n      <section class=\"section\">\r\n        <h1>\r\n          <i class=\"iconfont icon-github\" />\r\n          开源项目\r\n        </h1>\r\n        <p>\r\n          <h3>fre.js - 又一个小而美的前端 AOP 框架</h3>\r\n          <ul>\r\n            <li>受 react hooks API 启发，fre 是只有 hooks 的 AOP 框架</li>\r\n            <li>\r\n              世上少有的 fiber 调度的框架，fre 的 fiber 实现也是最小而美的\r\n            </li>\r\n            <li>您现在所看到的简历，就是基于 fre 构建的</li>\r\n\r\n            <li><span>难点：fiber 的实现和 hooks 是如何在 fiber 上运作的</span></li>\r\n          </ul>\r\n        </p>\r\n        <p>\r\n          <h3>smox - react 状态管理顶级设计</h3>\r\n          <ul>\r\n            <li>smox 是 react 状态管理顶级设计，它的封装极为精巧却强大</li>\r\n            <li>独创 path 机制，能够精准、最小的更新状态</li>\r\n            \r\n            <li><span>难点：path 机制和命中匹配的思路（感兴趣的话可以看<a href=\"https://github.com/132yse/smox/issues/20\">这篇</a>）</span></li>\r\n          </ul>\r\n        </p>\r\n        <p>\r\n          <h3>eplayer - 面向未来的视频播放器</h3>\r\n          <ul>\r\n            <li>基于 web-component 的 runtime，可以理解为浏览器自带的 vue</li>\r\n            <li>\r\n              天生自带 shadow-dom 和 scoped\r\n              css，可以使得播放器接入网站而不受外界环境干扰\r\n            </li>\r\n\r\n            <li><span>难点：可能就是 web-component 的一些不为人知的，比如穿透 scoped css</span></li>\r\n          </ul>\r\n        </p>\r\n        <p>\r\n          <h3>use-routes - 适用于 fre 和 react 的 hooks 版本路由</h3>\r\n          <ul>\r\n            <li>为 hooks 而生，同时适用于 fre 和 react</li>\r\n            <li>\r\n              800 B ，但却提供了路由常见的 API，利用了一个巧妙的正则排位，去匹配 url\r\n            </li>\r\n\r\n            <li><span>难点：可能是路由的设计思路，区别于 react-router 和 vue-router</span></li>\r\n          </ul>\r\n        </p>\r\n      </section>\r\n      <section class=\"section\">\r\n        <h1>\r\n          <i class=\"iconfont icon-gongju\" />\r\n          专业技能\r\n        </h1>\r\n        <ul class=\"common\">\r\n          <li>\r\n            <span>开发：</span>熟练 vue、react、node、golang 等技术栈\r\n          </li>\r\n          <li>\r\n            <span>设计：</span>熟练使用 ps、ae、maya 等设计软件\r\n          </li>\r\n          <li>\r\n            <span>源码：</span>熟悉 preact 源码，了解 vue、react 部分源码\r\n          </li>\r\n          <li>\r\n            <span>开源：</span>参与\r\n            Omi（腾讯前端框架）、gatsby（facebook）等开源项目\r\n          </li>\r\n        </ul>\r\n      </section>\r\n      <section class=\"section\">\r\n        <h1>\r\n          <i class=\"iconfont icon-pingjia\" />\r\n          自我评价\r\n        </h1>\r\n        <ul class=\"common\">\r\n          <li>\r\n            <span>热爱开源</span>\r\n            ，喜欢写一些前端工具，也一直为此而努力，同时写大量业务支撑\r\n          </li>\r\n          <li>\r\n            性格上比较脱线，还不够严谨，仍需不断修炼。但对待技术认真，有靠谱的判断力，会\r\n            <span>按需</span>做出妥协与调整\r\n          </li>\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<App />, document.getElementById('root'))\r\n"]}