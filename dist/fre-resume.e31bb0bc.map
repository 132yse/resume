{"version":3,"sources":["node_modules/fre/dist/fre.js","index.js","C:/Users/Administrator/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/bundle-url.js","C:/Users/Administrator/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["config","avatar","App","Left","Right","document","getElementById","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","i","length","module"],"mappings":"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","file":"fre-resume.e31bb0bc.map","sourceRoot":"..","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.fre = {}));\n}(this, function (exports) { 'use strict';\n\n  const TEXT = 'text';\n\n  function h(tag, config, ...args) {\n    const props = Object.assign({}, config);\n    const hasChildren = args.length > 0;\n    const rawChildren = hasChildren ? [].concat(...args) : [];\n    props.children = rawChildren\n      .filter(c => c != null && c !== false)\n      .map(c => (c instanceof Object ? c : h(TEXT, { nodeValue: c })));\n    return { tag, props }\n  }\n\n  const isEvent = name => name.startsWith('on');\n  const isText = name => name === 'nodeValue';\n  const isAttribute = name => name === 'class' || name === 'id' || name === 'href' || name === 'target' || name === 'src';\n  const isNew = (prev, next) => key => prev[key] !== next[key];\n\n  function updateProperties(dom, prevProps, nextProps) {\n    Object.keys(nextProps)\n      .filter(isText)\n      .filter(isNew(prevProps, nextProps))\n      .forEach(name => {\n        dom[name] = nextProps[name];\n      });\n\n      Object.keys(nextProps)\n      .filter(isAttribute)\n      .filter(isNew(prevProps, nextProps))\n      .forEach(name => {\n        dom.setAttribute(name,nextProps[name]);\n      });   \n\n    nextProps.style = nextProps.style || {};\n    Object.keys(nextProps.style)\n      .filter(isNew(prevProps.style, nextProps.style))\n      .forEach(key => {\n        dom.style[key] = nextProps.style[key];\n      });\n\n    Object.keys(nextProps)\n      .filter(isEvent)\n      .filter(isNew(prevProps, nextProps))\n      .forEach(name => {\n        const eventType = name.toLowerCase().substring(2);\n        dom.addEventListener(eventType, nextProps[name]);\n      });\n  }\n\n  function createElement(fiber) {\n    const isTextElement = fiber.tag === TEXT;\n    const dom = isTextElement\n      ? document.createTextNode('')\n      : document.createElement(fiber.tag);\n    updateProperties(dom, [], fiber.props);\n    return dom\n  }\n\n  let cursor = 0;\r\n\r\n  function update(k, r, v) {\r\n    r ? (v = r(this.state[k], v)) : v;\r\n    //这里实现不太理想，之后想办法搞成微任务\r\n    setTimeout(() => scheduleUpdate(this, k, v));\r\n  }\r\n  function resetCursor() {\r\n    cursor = 0;\r\n  }\r\n  function useState(initState) {\r\n    return useReducer(null, initState)\r\n  }\r\n  function useReducer(reducer, initState) {\r\n    let key = '$' + cursor;\r\n    let setter = update.bind(currentInstance, key, reducer);\r\n    if (currentInstance) cursor++;\r\n    let state;\r\n    if (currentInstance) state = currentInstance.state;\r\n    if (typeof state === 'object' && key in state) {\r\n      return [state[key], setter]\r\n    } else {\r\n      if (currentInstance) currentInstance.state[key] = initState;\r\n    }\r\n    let value = initState;\r\n    return [value, setter]\r\n  }\r\n\r\n  // 这个实现并不准确\r\n  function useEffect(effect, inputs) {\r\n    if (currentInstance) {\r\n      let key = '$' + cursor;\r\n      currentInstance.effects[key] = effect;\r\n      cursor++;\r\n    }\r\n  }\n\n  const HOST = 'host';\n  const HOOK = 'hook';\n  const ROOT = 'root';\n\n  const PLACE = 1;\n  const DELETE = 2;\n  const UPDATE = 3;\n\n  const ENOUGH_TIME = 1;\n\n  const updateQueue = [];\n  let nextUnitOfWork = null;\n  let pendingCommit = null;\n  let currentInstance = null;\n\n  function render(vdom, el) {\n    updateQueue.push({\n      from: ROOT,\n      dom: el,\n      newProps: { children: vdom }\n    });\n    requestIdleCallback(performWork);\n  }\n\n  function scheduleUpdate(instance, k, v) {\n    instance.state[k] = v;\n    updateQueue.push({\n      from: HOOK,\n      instance,\n      state: instance.state\n    });\n    requestIdleCallback(performWork);\n  }\n\n  function performWork(deadline) {\n    workLoop(deadline);\n    if (nextUnitOfWork || updateQueue.length > 0) {\n      requestIdleCallback(performWork);\n    }\n  }\n\n  function workLoop(deadline) {\n    if (!nextUnitOfWork) {\n      resetNextUnitOfWork();\n    }\n    while (nextUnitOfWork && deadline.timeRemaining() > ENOUGH_TIME) {\n      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    }\n    if (pendingCommit) {\n      commitAllWork(pendingCommit);\n    }\n    commitEffects(currentInstance.effects);\n  }\n\n  function commitEffects(effects) {\n    Object.keys(effects).forEach(key => {\n      let effect = effects[key];\n      effect();\n    });\n  }\n\n  function resetNextUnitOfWork() {\n    const update = updateQueue.shift();\n    if (!update) {\n      return\n    }\n\n    if (update.state) {\n      update.instance.__fiber.state = update.state;\n    }\n    const root =\n      update.from == ROOT\n        ? update.dom._rootContainerFiber\n        : getRoot(update.instance.__fiber);\n\n    nextUnitOfWork = {\n      type: ROOT,\n      base: update.dom || root.base,\n      props: update.newProps || root.props,\n      alternate: root\n    };\n  }\n\n  function getRoot(fiber) {\n    let node = fiber;\n    while (node.parent) {\n      node = node.parent;\n    }\n    return node\n  }\n\n  function performUnitOfWork(wipFiber) {\n    beginWork(wipFiber);\n    if (wipFiber.child) {\n      return wipFiber.child\n    }\n    let uow = wipFiber;\n    while (uow) {\n      completeWork(uow);\n      if (uow.sibling) {\n        return uow.sibling\n      }\n      uow = uow.parent;\n    }\n  }\n\n  function beginWork(wipFiber) {\n    if (wipFiber.type == HOOK) {\n      updateHOOKComponent(wipFiber);\n    } else {\n      updateHostComponent(wipFiber);\n    }\n  }\n\n  function updateHostComponent(wipFiber) {\n    if (!wipFiber.base) {\n      wipFiber.base = createElement(wipFiber);\n    }\n\n    const newChildren = wipFiber.props.children;\n    reconcileChildren(wipFiber, newChildren);\n  }\n\n  function updateHOOKComponent(wipFiber) {\n    let instance = wipFiber.base;\n    if (instance == null) {\n      instance = wipFiber.base = createInstance(wipFiber);\n    } else if (wipFiber.props == instance.props && !wipFiber.state) {\n      cloneChildFibers(wipFiber);\n    }\n    instance.props = wipFiber.props || {};\n    instance.state = wipFiber.state || {};\n    instance.effects = wipFiber.effects || {};\n    currentInstance = instance;\n    resetCursor();\n    const newChildren = wipFiber.tag(wipFiber.props);\n    reconcileChildren(wipFiber, newChildren);\n  }\n\n  function arrify(val) {\n    return val == null ? [] : Array.isArray(val) ? val : [val]\n  }\n\n  function reconcileChildren(wipFiber, newChildren) {\n    const elements = arrify(newChildren);\n\n    let index = 0;\n    let oldFiber = wipFiber.alternate ? wipFiber.alternate.child : null;\n    let newFiber = null;\n    while (index < elements.length || oldFiber != null) {\n      const prevFiber = newFiber;\n      const element = index < elements.length && elements[index];\n      const sameTag = oldFiber && element && element.tag == oldFiber.tag;\n\n      if (sameTag) {\n        newFiber = {\n          tag: oldFiber.tag,\n          type: oldFiber.type,\n          base: oldFiber.base,\n          props: element.props,\n          parent: wipFiber,\n          alternate: oldFiber,\n          state: oldFiber.state,\n          effectTag: UPDATE\n        };\n      }\n\n      if (element && !sameTag) {\n        newFiber = {\n          tag: element.tag,\n          type: typeof element.tag === 'string' ? HOST : HOOK,\n          props: element.props,\n          parent: wipFiber,\n          effectTag: PLACE\n        };\n      }\n\n      if (oldFiber && !sameTag) {\n        oldFiber.effectTag = DELETE;\n        wipFiber.effects = wipFiber.effects || [];\n        wipFiber.effects.push(oldFiber);\n      }\n\n      if (oldFiber) {\n        oldFiber = oldFiber.sibling;\n      }\n\n      if (index == 0) {\n        wipFiber.child = newFiber;\n      } else if (prevFiber && element) {\n        prevFiber.sibling = newFiber;\n      }\n\n      index++;\n    }\n  }\n\n  function createInstance(fiber) {\n    const instance = new fiber.tag(fiber.props);\n    instance.__fiber = fiber;\n    return instance\n  }\n\n  function cloneChildFibers(parentFiber) {\n    const oldFiber = parentFiber.alternate;\n    if (!oldFiber.child) {\n      return\n    }\n\n    let oldChild = oldFiber.child;\n    let prevChild = null;\n    while (oldChild) {\n      const newChild = {\n        tag: oldChild.tag,\n        type: oldChild.type,\n        base: oldChild.base,\n        props: oldChild.props,\n        state: oldChild.state,\n        alternate: oldChild,\n        parent: parentFiber\n      };\n      if (prevChild) {\n        prevChild.sibling = newChild;\n      } else {\n        parentFiber.child = newChild;\n      }\n      prevChild = newChild;\n      oldChild = oldChild.sibling;\n    }\n  }\n\n  function completeWork(fiber) {\n    if (fiber.type == HOOK) {\n      fiber.base.__fiber = fiber;\n    }\n\n    if (fiber.parent) {\n      const childEffects = fiber.effects || [];\n      const thisEffect = fiber.effectTag != null ? [fiber] : [];\n      const parentEffects = fiber.parent.effects || [];\n      fiber.parent.effects = parentEffects.concat(childEffects, thisEffect);\n    } else {\n      pendingCommit = fiber;\n    }\n  }\n\n  function commitAllWork(fiber) {\n    fiber.effects.forEach(f => {\n      commitWork(f);\n    });\n    fiber.base._rootContainerFiber = fiber;\n    nextUnitOfWork = null;\n    pendingCommit = null;\n  }\n\n  function commitWork(fiber) {\n    if (fiber.type == ROOT) {\n      return\n    }\n\n    let domParentFiber = fiber.parent;\n    while (domParentFiber.type == HOOK) {\n      domParentFiber = domParentFiber.parent;\n    }\n    const domParent = domParentFiber.base;\n\n    if (fiber.effectTag == PLACE && fiber.type == HOST) {\n      domParent.appendChild(fiber.base);\n    } else if (fiber.effectTag == UPDATE) {\n      updateProperties(fiber.base, fiber.alternate.props, fiber.props);\n    } else if (fiber.effectTag == DELETE) {\n      commitDELETE(fiber, domParent);\n    }\n  }\n\n  function commitDELETE(fiber, domParent) {\n    let node = fiber;\n    while (true) {\n      if (node.type == HOOK) {\n        node = node.child;\n        continue\n      }\n      domParent.removeChild(node.base);\n      while (node != fiber && !node.sibling) {\n        node = node.parent;\n      }\n      if (node == fiber) {\n        return\n      }\n      node = node.sibling;\n    }\n  }\n\n  exports.h = h;\n  exports.render = render;\n  exports.useState = useState;\n  exports.useReducer = useReducer;\n  exports.useEffect = useEffect;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","import './style.css'\r\nimport { h, render } from 'fre'\r\nconst config = {\r\n  avatar:\r\n    'https://tvax4.sinaimg.cn/crop.0.78.1422.1422.180/0065Zy9ely8fve0dvwdwnj31401z4b29.jpg'\r\n}\r\nfunction App() {\r\n  return (\r\n    <div class=\"container\">\r\n      <Left />\r\n      <Right />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Left() {\r\n  return (\r\n    <div class=\"left\">\r\n      <div class=\"logo\">\r\n        <img src={config.avatar} />\r\n        <div class=\"name\">\r\n          <h1> 赵昌浩 </h1>\r\n          <h3>求职意向：web 前端</h3>\r\n        </div>\r\n        <div class=\"info\">\r\n          <ul>\r\n            <li><i class='iconfont icon-rili'></i>生日：1998-11-22</li>\r\n            <li><i class='iconfont icon-weizhi'></i>籍贯：山东高密</li>\r\n            <li><i class='iconfont icon-dianhua'></i>电话：18593996744</li>\r\n            <li><i class='iconfont icon-youxiang'></i>邮箱：1533540012@qq.com</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Right(){\r\n  return (\r\n    <div class='right'>\r\n      <section class='edu'>\r\n        <h1><i class='iconfont icon-jiaoyu'></i>教育背景</h1>\r\n        <p>\r\n          <h3>2016.09——2020.06 北海艺术设计学院 动画专业 二本</h3>\r\n          <ul>\r\n            <li>2016 年加入 ·平行世界工作室·</li>\r\n            <li>2017 年，参与制作的《琵琶行》、《离骚》等，多次热搜，荣登环球时报、人民日报等各大报刊</li>\r\n            <li>2018 年，《逍遥游》发布，《琵琶行》荣登央视，由方锦龙先生奏乐，任嘉伦翻唱</li>\r\n            <li>2019 年，《琵琶行》抖音等平台高位不下</li>\r\n          </ul>\r\n        </p>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<App />, document.getElementById('root'))\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}